Profile
{
	name = KerbalismSupport
	modname = zKerbalismSystemHeat
	moddir = zKerbalismSystemHeat

	Supply
	{
		resource = Ore
		low_message = Ore is almost depleted on $VESSEL
		empty_message = There is no more Ore on $VESSEL
		refill_message = $VESSEL Ore storage refilled
	}
}

@PART[*]:HAS[@MODULE[ModuleResourceHarvester]]:NEEDS[Kerbalism,SystemHeat]:BEFORE[KerbalismDefault]
{
	@MODULE[ModuleResourceHarvester],*
	{
		@name = SystemHeatHarvesterKerbalism
	}
}
@PART[*]:HAS[@MODULE[SystemHeatHarvesterKerbalism]]:NEEDS[Kerbalism,SystemHeat]:AFTER[KerbalismDefault]
{
	@MODULE[SystemHeatHarvesterKerbalism],*
	{
		@name = ModuleResourceHarvester
	}
}

@PART[*]:HAS[@MODULE[ModuleSystemHeatHarvester]]:NEEDS[Kerbalism,SystemHeat]:FOR[zzzz_SystemHeat]
{
	@MODULE[ModuleSystemHeatHarvester],*
	{
		@name = SystemHeatHarvesterKerbalism
	}

	MODULE
	{
		name = PlannerController
		title = harvester
		considered = false
	}
}

@PART[*]:HAS[@MODULE[Reliability]:HAS[#type[ModuleResourceHarvester]]]:NEEDS[FeatureReliability,SystemHeat]:AFTER[KerbalismDefault]
{
	@MODULE[Reliability]:HAS[#type[ModuleResourceHarvester]]
	{
		@type = SystemHeatHarvesterKerbalism
	}
}

@PART[*]:HAS[@MODULE[ModuleResourceHarvester]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]]:FOR[zzzz_SystemHeat]
{
	!MODULE[ModuleCoreHeat] {}
	%MODULE[ModuleSystemHeat]
	{
		%name = ModuleSystemHeat
		// Cubic metres
		%volume = #$/mass$ //1 ton equals 1 cubic meter of cooling. it *very roughly* approximates the balance of squads ISRU
		%moduleID = harvester
		%iconName = Icon_Drill
	}

	!MODULE[ModuleOverheatDisplay] {}

	@MODULE[ModuleResourceHarvester]:HAS[@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]]
	{
		//Ive seen some converters that dont use electric charge, those things need thier own patch, as we calculate produced heat based on EC consumption.
		@name = SystemHeatHarvesterKerbalism
		moduleID = #$ConverterName$ //this should be the localization string or the actual name, either way, unique.
		systemHeatModuleID = harvester
		shutdownTemperature = 750
		systemOutletTemperature = 350
		systemEfficiency
		{
			key = 0 1.0
			key = 400 1.0
			key = 650 0.0
		}
		systemPower = #$INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]/Ratio$
		@systemPower *= #$Efficiency$ //set the heat ouput as proportional to the EC usage.
		// I *think* that all the energy goes into heat.
		!Thermalefficiency {}
		!TemperatureModifier {}
		@generatesHeat = false //disable stock heating
	}
}
